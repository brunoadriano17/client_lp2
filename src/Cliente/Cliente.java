/* TRABALHO DE LP2 */
 /* BRUNO ADRIANO E MARCELO CARBONO*/
package Cliente;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Bruno
 */
public class Cliente extends javax.swing.JFrame {

    ClientConnection cc;
    int delay = 100;
    int interval = 100;
    Timer t = new Timer();
    Socket socket;
    InputStream in;
    OutputStream out;

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();

    }

    public void verificarMensagens() {
        this.t.scheduleAtFixedRate(new TimerTask() {
            public void run() {
                Scanner entrada;
                try {
                    entrada = new Scanner(socket.getInputStream());
                    while (entrada.hasNext()) {

                        String msg = entrada.nextLine();
                        lerMensagem(msg);

                    }
                } catch (IOException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }, delay, interval);
    }

    /* LEITURA DO PROTOCOLO */
    public void lerMensagem(String msg) {
        String operacao = "";
        String result = "";
        String remetente = "";
        String destinatarios = "";
        String mensagem = "";
        int i = 0;
        for (; msg.charAt(i) != ':'; i++) {
            operacao += msg.charAt(i);
        }
        i++;
        if (operacao.equals("lista_usuarios")) {
            for (; i < msg.length(); i++) {
                if (msg.charAt(i) == ';') {
                    result += "\n";
                } else {
                    result += msg.charAt(i);
                }
            }
            fieldUsuarios.setText(result);
        } else if (operacao.equals("transmitir")) {
            /* DEFINE O REMETENTE */
            for (; msg.charAt(i) != ':'; i++) {
                remetente += msg.charAt(i);
            }
            i++;

            /* DEFINE OS DESTINATARIOS */
            for (; msg.charAt(i) != ':'; i++) {
                destinatarios += msg.charAt(i);
            }
            i++;

            /* DEFINE A MENSAGEM */
            for (; i < msg.length(); i++) {
                mensagem += msg.charAt(i);
            }

            if (destinatarios.equals("*")) {
                fieldChat.setText(fieldChat.getText() + System.lineSeparator() + remetente + ":" + mensagem);
            } else {

                fieldChat.setText(fieldChat.getText()
                        + System.lineSeparator()
                        + "Mensagem privada de '" + remetente
                        + "' para: " + destinatarios + ":\n"
                        + mensagem
                );
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldServidor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fieldUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fieldPorta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        fieldUsuarios = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        fieldMensagem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnConectar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldChat = new javax.swing.JTextArea();
        btnDesconectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        fieldServidor.setText("127.0.0.1");
        fieldServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldServidorActionPerformed(evt);
            }
        });
        getContentPane().add(fieldServidor);
        fieldServidor.setBounds(10, 30, 90, 20);

        jLabel1.setText("Servidor");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 50, 14);

        fieldUsuario.setText("bruno");
        fieldUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(fieldUsuario);
        fieldUsuario.setBounds(150, 30, 90, 20);

        jLabel2.setText("Usu치rios conectados");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(490, 10, 100, 14);

        fieldPorta.setText("1234");
        getContentPane().add(fieldPorta);
        fieldPorta.setBounds(110, 30, 30, 20);

        jLabel3.setText("Porta");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 10, 40, 14);

        fieldUsuarios.setEditable(false);
        fieldUsuarios.setColumns(20);
        fieldUsuarios.setRows(5);
        jScrollPane2.setViewportView(fieldUsuarios);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(490, 30, 120, 210);

        jLabel4.setText("Usu치rio");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(150, 10, 60, 14);
        getContentPane().add(fieldMensagem);
        fieldMensagem.setBounds(10, 250, 470, 20);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(490, 250, 120, 20);

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });
        getContentPane().add(btnConectar);
        btnConectar.setBounds(250, 30, 90, 23);

        jLabel5.setText("/nome, nome: MENSAGEM para mensagens privadas");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 280, 460, 14);

        fieldChat.setEditable(false);
        fieldChat.setColumns(20);
        fieldChat.setRows(5);
        jScrollPane1.setViewportView(fieldChat);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 470, 180);

        btnDesconectar.setText("Desconectar");
        btnDesconectar.setEnabled(false);
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDesconectar);
        btnDesconectar.setBounds(340, 30, 93, 23);

        setSize(new java.awt.Dimension(637, 354));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fieldServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldServidorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldServidorActionPerformed

    private void fieldUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUsuarioActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        try {
            Socket socket = new Socket(fieldServidor.getText(), Integer.parseInt(fieldPorta.getText()));
            PrintStream saida = new PrintStream(socket.getOutputStream());
            saida.println("login:" + fieldUsuario.getText());

            Scanner entrada = new Scanner(socket.getInputStream());
            if (entrada.nextLine().equals("login:true")) {
                this.socket = socket;
                this.in = socket.getInputStream();
                this.out = socket.getOutputStream();
                fieldChat.setText("Login realizado com sucesso...");
                verificarMensagens();
                fieldUsuario.setEnabled(false);
                fieldServidor.setEnabled(false);
                fieldPorta.setEnabled(false);
                btnConectar.setEnabled(false);
                btnDesconectar.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Usu치rio invalido ou j치 existente");
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar ao servidor");
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String msg = fieldMensagem.getText();
            String nomes = "";
            String mensagem = "";
            if (msg.charAt(0) == '/') {
                int i = 1;
                for (; msg.charAt(i) != ':'; i++) {
                    if (msg.charAt(i) == ',') {
                        nomes += ";";
                    } else {
                        nomes += msg.charAt(i);
                    }
                }
                i++;
                for (; i < msg.length(); i++) {
                    mensagem += msg.charAt(i);
                }
                sendMsgServer("mensagem:" + nomes + ":" + mensagem);
                fieldMensagem.setText("");
            } else {
                sendMsgServer("mensagem:*:" + fieldMensagem.getText());
                fieldMensagem.setText("");
            }
        } catch (IOException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        try {
            in.close();
            out.close();
            socket.close();
            btnConectar.setEnabled(true);
            fieldUsuario.setEnabled(true);
            fieldPorta.setEnabled(true);
            fieldServidor.setEnabled(true);
            btnDesconectar.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    public void sendMsgServer(String msg) throws IOException {
        PrintStream saida = new PrintStream(socket.getOutputStream());
        saida.println(msg);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JTextArea fieldChat;
    private javax.swing.JTextField fieldMensagem;
    private javax.swing.JTextField fieldPorta;
    private javax.swing.JTextField fieldServidor;
    private javax.swing.JTextField fieldUsuario;
    private javax.swing.JTextArea fieldUsuarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
